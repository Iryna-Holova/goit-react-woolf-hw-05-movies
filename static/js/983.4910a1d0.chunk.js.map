{"version":3,"file":"static/js/983.4910a1d0.chunk.js","mappings":"iRAgEA,UAvDiB,WACf,IAAAA,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA4BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAnCG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAoCJ,EAAAA,EAAAA,UAAS,GAAEK,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAAxCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA8BR,EAAAA,EAAAA,WAAS,GAAMS,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BZ,EAAAA,EAAAA,UAAS,IAAGa,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,EAAOC,OAAOpB,EAAaqB,IAAI,UAAY,GAEjDC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGD,OAHCF,EAAAC,KAAA,EAEdlB,GAAW,GACXI,EAAS,IAAIa,EAAAE,KAAA,EACyBC,EAAAA,GAA4B,CAChEf,KAAAA,IACC,KAAD,EAAAS,EAAAG,EAAAI,KAFM9B,EAAMuB,EAANvB,OAAQyB,EAAWF,EAAXE,YAGhBxB,EAAUD,GACVK,EAAcoB,GAAaC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAE3Bb,EAAS,2BACTZ,EAAU,MAAM,QAEE,OAFFyB,EAAAC,KAAA,GAEhBlB,GAAW,GAAOiB,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAX,EAAA,yBAErB,kBAfc,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAgBfC,EAAAA,IACAlB,GACF,GAAG,CAACJ,IAMJ,OACEuB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mDAAkDC,SAC/DvC,GACCwC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACEF,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACC,MAAO3C,EAAQ4C,UAAWpC,IACpCJ,EAAa,IACZiC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CACTzC,WAAYA,EACZ0C,WAAYhC,EACZiC,aAba,SAAAjC,GACvBlB,EAAgB,CAAEkB,KAAAA,GACpB,OAeQN,GACF6B,EAAAA,EAAAA,KAACW,EAAAA,EAAM,IAEPpC,IAASyB,EAAAA,EAAAA,KAACY,EAAAA,EAAO,CAACC,KAAMtC,KAIhC,C","sources":["pages/HomePage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as moviesApi from 'api/movies';\nimport { scroll } from 'helpers';\nimport MovieList from 'components/MovieList/MovieList';\nimport Pagination from 'components/Shared/Pagination';\nimport Message from 'components/Shared/Message';\nimport Loader from 'components/Shared/Loader';\n\nconst HomePage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState(null);\n  const [totalPages, setTotalPages] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const page = Number(searchParams.get('page')) || 1;\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const { movies, total_pages } = await moviesApi.getTrendingMovies({\n          page,\n        });\n        setMovies(movies);\n        setTotalPages(total_pages);\n      } catch (error) {\n        setError('Something went wrong...');\n        setMovies(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    scroll.scrollToTop();\n    getMovies();\n  }, [page]);\n\n  const handlePageChange = page => {\n    setSearchParams({ page });\n  };\n\n  return (\n    <main className=\"container grow flex flex-col mt-16 py-12 gap-y-8\">\n      {movies ? (\n        <>\n          <MovieList items={movies} isLoading={loading} />\n          {totalPages > 1 && (\n            <Pagination\n              totalPages={totalPages}\n              activePage={page}\n              onPageChange={handlePageChange}\n            />\n          )}\n        </>\n      ) : loading ? (\n        <Loader />\n      ) : (\n        error && <Message text={error} />\n      )}\n    </main>\n  );\n};\n\nexport default HomePage;\n"],"names":["_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","movies","setMovies","_useState3","_useState4","totalPages","setTotalPages","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","page","Number","get","useEffect","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$moviesApi$getT","_movies","total_pages","_context","prev","next","moviesApi","sent","t0","finish","stop","apply","arguments","scroll","_jsx","className","children","_jsxs","_Fragment","MovieList","items","isLoading","Pagination","activePage","onPageChange","Loader","Message","text"],"sourceRoot":""}